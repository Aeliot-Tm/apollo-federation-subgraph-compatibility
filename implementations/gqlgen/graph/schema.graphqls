extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0",
        import: ["@key", "@shareable", "@provides", "@external", "@tag", "@extends", "@override"])

type Product
  @key(fields: "id")
  @key(fields: "sku package")
  @key(fields: "sku variation { id }") {
  id: ID!
  sku: String
  package: String
  variation: ProductVariation
  dimensions: ProductDimension
  createdBy: User
    @provides(fields: "totalProductsCreated")
    @goField(forceResolver: true)
  notes: String @tag(name: "internal")
}

type ProductDimension @shareable {
  size: String
  weight: Float
  unit: String @inaccessible
}

type ProductVariation {
  id: ID!
}

type Query {
  product(id: ID!): Product
}

type User @key(fields: "email") @extends {
  email: ID! @external
  name: String @override(from: "users")
  totalProductsCreated: Int @external
}

directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goTag(
  key: String!
  value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION